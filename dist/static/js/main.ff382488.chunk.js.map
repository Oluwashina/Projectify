{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","getFireStore","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.ff382488.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink} from 'react-router-dom'\r\nimport {connect}  from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions'\r\n\r\nconst SignedInLinks = (props) =>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n            <li><a onClick={props.signOut}>Log Out</a></li>\r\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n        </ul>\r\n          )\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n} \r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        //make async call to firebase\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() =>{\r\n            dispatch({ type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) =>{\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() =>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n         const firebase = getFirebase()\r\n         const firestore = firebase.firestore();\r\n\r\n         firebase.auth().createUserWithEmailAndPassword(\r\n             newUser.email,\r\n             newUser.password\r\n         ).then((resp)=>{\r\n             return firestore.collection('users').doc(resp.user.uid).set({\r\n                 firstName: newUser.firstName,\r\n                 lastName: newUser.lastName,\r\n                 initials: newUser.firstName[0] + newUser.lastName[0]\r\n             })\r\n         }).then(()=>{\r\n             dispatch({type: 'SIGNUP_SUCCESS'})\r\n         }).catch(err=>{\r\n             dispatch({type: 'SIGNUP_ERROR', err})\r\n         })\r\n    }\r\n}","import React from 'react';\r\nimport { NavLink} from 'react-router-dom'\r\n\r\nconst SignedOutLinks = () =>{\r\n    return (\r\n        <ul className=\"right\">\r\n            <li><NavLink to=\"/signup\">SignUp</NavLink></li>\r\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\r\n        </ul>\r\n          )\r\n}\r\n\r\nexport default SignedOutLinks;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux'\r\n\r\nconst Navbar = (props) =>{\r\n    const {auth, profile} = props;\r\n    console.log(auth)\r\n    const links  = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n            <Link to=\"/\" className=\"brand-logo\">MarioPlan</Link>\r\n                {links}\r\n            </div>\r\n\r\n        </nav>\r\n          )\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state)\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props\r\n    return(\r\n       <div className=\"section\">\r\n           <div className=\"card z-depth-0\">\r\n               <div className=\"card-content\">\r\n                   <span className=\"card-title\">Notifications</span>\r\n                   <ul className=\"notification\">\r\n                      { notifications && notifications.map(item =>{\r\n                          return (\r\n                              <li key={item.id}>\r\n                                  <span className=\"pink-text\">{item.user}</span>\r\n                                  <span> {item.content}</span>\r\n                                  <div className=\"grey-text note-date\">\r\n                                      {moment(item.time.toDate()).fromNow()}\r\n                                  </div>\r\n                              </li>\r\n                          )\r\n                      })}\r\n                   </ul>\r\n               </div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Notifications","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card z-depth-0 project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={'/project/'+ project.id} key={project.id} >\r\n              <ProjectSummary project={project}  />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    state = {  }\r\n    render() {\r\n        const {projects, auth, notifications} = this.props\r\n            if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        return (  \r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                     <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications ={notifications} />\r\n                    </div>\r\n                </div>             \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state)\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n \r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection : 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 4, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    if(project){\r\n      return(\r\n      <div className=\"container section project-details\">\r\n      <div className=\"card z-depth-0\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action grey-text\">\r\n            <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      )\r\n    }else{\r\n      return (\r\n          <div className=\"container center\">\r\n            <p>Loading Project...</p>\r\n          </div>\r\n        );\r\n    }\r\n  \r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return{\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects'}\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport {connect}  from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = { \r\n        email: '',\r\n        password: ''\r\n     }\r\n     handleSubmit = (e) =>{\r\n         e.preventDefault()\r\n         this.props.signIn(this.state)\r\n        //  console.log(this.state)\r\n     }\r\n     handleChange = (e) =>{\r\n         this.setState({\r\n             [e.target.id] : e.target.value\r\n         })\r\n     }\r\n    render() { \r\n        const {authError, auth} = this.props\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return ( \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                        <div className=\"red-text center\">\r\n                                {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = { \r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n     }\r\n     handleSubmit = (e) =>{\r\n         e.preventDefault()\r\n        //  console.log(this.state)\r\n        this.props.signUp(this.state)\r\n     }\r\n     handleChange = (e) =>{\r\n         this.setState({\r\n             [e.target.id] : e.target.value\r\n         })\r\n     }\r\n    render() { \r\n        const {auth, authError} = this.props\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return ( \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = { \r\n        title: '',\r\n        content: '',\r\n     }\r\n     handleSubmit = (e) =>{\r\n         e.preventDefault()\r\n        //  console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n     }\r\n     handleChange = (e) =>{\r\n         this.setState({\r\n             [e.target.id] : e.target.value\r\n         })\r\n     }\r\n    render() { \r\n        const {auth} = this.props\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        return ( \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                     <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) =>{\r\n    return(dispatch, getState, {getFirebase,getFireStore}) =>{\r\n        //make async call to database\r\n        const firestore = getFirebase().firestore()\r\n        console.log(getState())\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() =>{\r\n            dispatch({type: 'CREATE_PROJECT', project: project})\r\n        }).catch((err) =>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n       \r\n    }\r\n};","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null\r\n}\r\n\r\nconst authReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Invalid Credentials'\r\n            }\r\n        case 'LOGIN_SUCCESS' :\r\n            console.log('Login successfully')\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNOUT_SUCCESS' :\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS' :\r\n            console.log('signup success')\r\n            return{\r\n                ...state,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR' :\r\n            console.log('signup error')\r\n            return{\r\n                ...state,\r\n                authError: action.err.message \r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content:'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content:'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content:'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT' :\r\n        console.log('project created', action.project)\r\n        return state;\r\n        case 'CREATE_PROJECT_ERROR' :\r\n            console.log('error while creating project', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport  {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer"," import firebase from 'firebase/app'\r\n import 'firebase/firestore';\r\n import 'firebase/auth'\r\n \r\n\r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyANMrtIM84bFwqZiZeKbpVZxlTbEqjwmZk\",\r\n    authDomain: \"marioplan-cfa91.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-cfa91.firebaseio.com\",\r\n    projectId: \"marioplan-cfa91\",\r\n    storageBucket: \"marioplan-cfa91.appspot.com\",\r\n    messagingSenderId: \"246341570775\",\r\n    appId: \"1:246341570775:web:de5863037a74be38a36092\",\r\n    measurementId: \"G-DFDD1PJ1LZ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport {ReactReduxFirebaseProvider, getFirebase, isLoaded} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\n\nconst rrfConfig = { \n  userProfile: 'users',\n  useFirestoreForProfile: true\n } // react-redux-firebase config\n\nconst store = createStore(rootReducer,\n  compose(\n   applyMiddleware(thunk.withExtraArgument({getFirestore, getFirebase})),\n   reduxFirestore(firebase,fbConfig),\n  )\n);\n\nconst rrfProps = {\n     firebase: fbConfig,\n     config: rrfConfig,\n     dispatch: store.dispatch,\n     createFirestoreInstance // <- needed if using firestore\n }\n\n function AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className=\"container center\"><p>Loading...</p></div>;\n  return children\n}\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </AuthIsLoaded>\n  </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}