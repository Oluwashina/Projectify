{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["SignedInLinks","state","sidenav","document","querySelector","M","Sidenav","init","Fragment","href","data-target","className","to","onClick","this","props","signOut","profile","initials","id","Component","connect","dispatch","getState","getFirebase","auth","then","type","SignedOutLinks","draggable","Navbar","console","log","links","uid","firebase","Notifications","notifications","map","item","key","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleSubmit","e","preventDefault","signIn","handleChange","setState","target","value","authError","loading","onSubmit","htmlFor","onChange","style","marginRight","fontSize","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","getFireStore","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.f0b9286b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink} from 'react-router-dom'\r\nimport {connect}  from 'react-redux';\r\nimport {signOut} from '../../store/actions/authActions'\r\nimport M from 'materialize-css'\r\n\r\nclass SignedInLinks extends Component {\r\n    state = { \r\n\r\n     };\r\n     componentDidMount(){\r\n        let sidenav = document.querySelector('#slide-out');\r\n        M.Sidenav.init(sidenav, {});\r\n     }\r\n    render() { \r\n        return ( \r\n            <React.Fragment>\r\n            {/* hamburger trigger */}\r\n          <a href=\"/#\" data-target=\"slide-out\" className=\"sidenav-trigger\">\r\n            <i className=\"material-icons\">menu</i>\r\n          </a>\r\n  \r\n  \r\n          <ul className=\"right\">\r\n             <li className=\"hide-on-med-and-down\"><NavLink to=\"/\">Home</NavLink></li>\r\n              <li className=\"hide-on-med-and-down\"><NavLink to=\"/create\">New Project</NavLink></li>\r\n              <li className=\"hide-on-med-and-down\"><a href=\"/#\" onClick={this.props.signOut}>Log Out</a></li>\r\n              <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">{this.props.profile.initials}</NavLink></li>\r\n          </ul>\r\n  \r\n          {/* mobile menu list */}\r\n          <ul id=\"slide-out\" className=\"sidenav sidenav-close\">\r\n              <li><NavLink to=\"/\">Home</NavLink></li>\r\n              <li><NavLink to=\"/create\">New Project</NavLink></li>\r\n              <li><a href=\"/#\" onClick={this.props.signOut}>Log Out</a></li>\r\n          </ul>\r\n          </React.Fragment>\r\n         );\r\n    }\r\n}\r\n \r\n\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signOut: () => dispatch(signOut())\r\n    }\r\n} \r\n\r\nexport default connect(null,mapDispatchToProps)(SignedInLinks);","export const signIn = (credentials) =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        dispatch({type: 'SIGNIN_LOADER'})\r\n        //make async call to firebase\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(() =>{\r\n            dispatch({ type: 'LOGIN_SUCCESS'})\r\n        }).catch((err) =>{\r\n            dispatch({type: 'LOGIN_ERROR', err})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signOut = () =>{\r\n    return (dispatch, getState, {getFirebase}) =>{\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signOut().then(() =>{\r\n            dispatch({type: 'SIGNOUT_SUCCESS'})\r\n        });\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) =>{\r\n    return (dispatch, getState, {getFirebase, getFirestore}) =>{\r\n        dispatch({type: 'SIGNUP_LOADER'})\r\n         const firebase = getFirebase()\r\n         const firestore = firebase.firestore();\r\n\r\n         firebase.auth().createUserWithEmailAndPassword(\r\n             newUser.email,\r\n             newUser.password\r\n         ).then((resp)=>{\r\n             return firestore.collection('users').doc(resp.user.uid).set({\r\n                 firstName: newUser.firstName,\r\n                 lastName: newUser.lastName,\r\n                 initials: newUser.firstName[0] + newUser.lastName[0]\r\n             })\r\n         }).then(()=>{\r\n             dispatch({type: 'SIGNUP_SUCCESS'})\r\n         }).catch(err=>{\r\n             dispatch({type: 'SIGNUP_ERROR', err})\r\n         })\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport M from 'materialize-css'\r\n\r\nclass SignedOutLinks extends Component {\r\n  state = {\r\n\r\n  };\r\n  componentDidMount(){\r\n    let sidenav = document.querySelector('#slide-out');\r\n    M.Sidenav.init(sidenav, {\r\n        draggable: true\r\n    });\r\n   \r\n }\r\n\r\n \r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n          {/* hamburger trigger */}\r\n        <a href=\"/#\" data-target=\"slide-out\" className=\"sidenav-trigger\">\r\n          <i className=\"material-icons\">menu</i>\r\n        </a>\r\n\r\n        <ul className=\"right hide-on-med-and-down\">\r\n          <li>\r\n            <NavLink to=\"/signup\">SignUp</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/signin\">Login</NavLink>\r\n          </li>\r\n        </ul>\r\n\r\n        {/* mobile menu list */}\r\n        <ul id=\"slide-out\" className=\"sidenav sidenav-close\">\r\n          <li>\r\n            <NavLink to=\"/signup\">SignUp</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/signin\">Login</NavLink>\r\n          </li>\r\n        </ul>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignedOutLinks;\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport SignedInLinks from './SignedInLinks';\r\nimport SignedOutLinks from './SignedOutLinks';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() { \r\n        const {auth, profile} = this.props;\r\n        console.log(auth)\r\n        const links  = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />\r\n        return ( \r\n            <React.Fragment>\r\n            <nav className=\"nav-wrapper blue darken-4\">\r\n                <div className=\"container\">\r\n                <Link to=\"/\" className=\"brand-logo\">Projectify</Link>\r\n                    {links}\r\n                </div>\r\n            </nav>\r\n         </React.Fragment>\r\n         );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state)\r\n    return{\r\n        auth: state.firebase.auth,\r\n        profile: state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Navbar);","import React from 'react';\r\nimport moment from 'moment'\r\n\r\n\r\n\r\nconst Notifications = (props) => {\r\n    const {notifications} = props\r\n    return(\r\n       <div className=\"section\">\r\n           <div className=\"card\">\r\n               <div className=\"card-content\">\r\n                   <span className=\"card-title\">Notifications</span>\r\n                   <ul className=\"notification\">\r\n                      { notifications && notifications.map(item =>{\r\n                          return (\r\n                              <li key={item.id}>\r\n                                  <span className=\"pink-text\">{item.user}</span>\r\n                                  <span> {item.content}</span>\r\n                                  <div className=\"grey-text note-date\">\r\n                                      {moment(item.time.toDate()).fromNow()}\r\n                                  </div>\r\n                              </li>\r\n                          )\r\n                      })}\r\n                   </ul>\r\n               </div>\r\n           </div>\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Notifications","import React from \"react\";\r\nimport moment from 'moment'\r\n\r\nconst ProjectSummary = ({project}) => {\r\n  return (\r\n    <div className=\"card project-summary\">\r\n      <div className=\"card-content grey-text text-darken-3\">\r\n        <span className=\"card-title\">{project.title}</span>\r\n        <p>Posted by <span className=\"pink-text\">{project.authorFirstName} {project.authorLastName}</span></p>\r\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectSummary;\r\n","import React from \"react\";\r\nimport ProjectSummary from \"./ProjectSummary\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectList = ({ projects }) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects &&\r\n        projects.map((project) => {\r\n          return (\r\n            <Link to={'/project/'+ project.id} key={project.id} >\r\n              <ProjectSummary project={project}  />\r\n            </Link>\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n","import React, { Component } from 'react';\r\nimport Notifications from './Notifications'\r\nimport ProjectList from '../projects/ProjectList'\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\n\r\nclass Dashboard extends Component {\r\n    state = {  }\r\n    render() {\r\n        const {projects, auth, notifications} = this.props\r\n            if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        return (  \r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                     <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects} />\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications ={notifications} />\r\n                    </div>\r\n                </div>             \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    console.log(state)\r\n    return{\r\n        projects: state.firestore.ordered.projects,\r\n        auth: state.firebase.auth,\r\n        notifications: state.firestore.ordered.notifications\r\n    }\r\n}\r\n \r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection : 'projects', orderBy: ['createdAt', 'desc']},\r\n        {collection: 'notifications', limit: 4, orderBy: ['time', 'desc']}\r\n    ])\r\n)(Dashboard);","import React from \"react\";\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase'\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\nconst ProjectDetails = (props) => {\r\n    const {project, auth} = props\r\n    if(!auth.uid) return <Redirect to=\"/signin\" />\r\n    if(project){\r\n      return(\r\n      <div className=\"container section project-details\">\r\n      <div className=\"card\">\r\n        <div className=\"card-content\">\r\n          <span className=\"card-title\">{project.title}</span>\r\n          <p>{project.content}</p>\r\n        </div>\r\n        <div className=\"card-action grey-text\">\r\n            <div>Posted by <span className=\"pink-text\"> {project.authorFirstName} {project.authorLastName}</span></div>\r\n            <div>{moment(project.createdAt.toDate()).calendar()}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n      )\r\n    }else{\r\n      return (\r\n          <div className=\"container center\">\r\n            <p>Loading Project...</p>\r\n          </div>\r\n        );\r\n    }\r\n  \r\n};\r\n\r\nconst mapStateToProps = (state, ownProps) =>{\r\n  const id = ownProps.match.params.id\r\n  const projects = state.firestore.data.projects\r\n  const project = projects ? projects[id] : null\r\n  return{\r\n    project: project,\r\n    auth: state.firebase.auth\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n  firestoreConnect([\r\n    {collection: 'projects'}\r\n  ])\r\n)(ProjectDetails);\r\n","import React, { Component } from 'react';\r\nimport {connect}  from 'react-redux';\r\nimport { signIn } from '../../store/actions/authActions';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n    state = { \r\n        email: '',\r\n        password: ''\r\n     }\r\n     handleSubmit = (e) =>{\r\n         e.preventDefault()\r\n         this.props.signIn(this.state)\r\n        //  console.log(this.state)\r\n     }\r\n     handleChange = (e) =>{\r\n         this.setState({\r\n             [e.target.id] : e.target.value\r\n         })\r\n     }\r\n    render() { \r\n        const {authError, auth, loading} = this.props\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return ( \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"\">\r\n                        <div className=\"red-text center\">\r\n                                {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue darken-4 z-depth-0\">\r\n                        {loading && (\r\n                            <i\r\n                            className=\"fa fa-refresh fa-spin\"\r\n                            style={{ marginRight: \"5px\", fontSize: \"15px\" }}\r\n                            />\r\n                        )}\r\n                        {loading && <span>Login</span>}\r\n                        {!loading && <span>Login</span>}\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        authError: state.auth.authError,\r\n        auth: state.firebase.auth,\r\n        loading: state.auth.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signIn : (creds) => dispatch(signIn(creds))\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","import React, { Component } from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signUp} from '../../store/actions/authActions';\r\n\r\nclass SignUp extends Component {\r\n    state = { \r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: ''\r\n     }\r\n     handleSubmit = (e) =>{\r\n         e.preventDefault()\r\n        //  console.log(this.state)\r\n          this.props.signUp(this.state)\r\n     }\r\n     handleChange = (e) =>{\r\n         this.setState({\r\n             [e.target.id] : e.target.value\r\n         })\r\n     }\r\n    render() { \r\n        const {auth, authError, loading} = this.props\r\n        if(auth.uid) return <Redirect to=\"/\" />\r\n        return ( \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue darken-4 z-depth-0\">\r\n                        {loading && (\r\n                            <i\r\n                            className=\"fa fa-refresh fa-spin\"\r\n                            style={{ marginRight: \"5px\", fontSize: \"15px\" }}\r\n                            />\r\n                        )}\r\n                        {loading && <span>Sign Up</span>}\r\n                        {!loading && <span>Sign Up</span>}\r\n                        </button>\r\n                        <div className=\"center red-text\">\r\n                            {authError ? <p>{authError}</p> : null}\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth,\r\n        authError: state.auth.authError,\r\n        loading: state.auth.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        signUp: (newUser) => dispatch(signUp(newUser))\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {createProject} from '../../store/actions/projectActions';\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass CreateProject extends Component {\r\n    state = { \r\n        title: '',\r\n        content: '',\r\n     }\r\n     handleSubmit = (e) =>{\r\n         e.preventDefault()\r\n        //  console.log(this.state)\r\n        this.props.createProject(this.state)\r\n        this.props.history.push('/')\r\n     }\r\n     handleChange = (e) =>{\r\n         this.setState({\r\n             [e.target.id] : e.target.value\r\n         })\r\n     }\r\n    render() { \r\n        const {auth} = this.props\r\n        if(!auth.uid) return <Redirect to=\"/signin\" />\r\n        return ( \r\n            <div className=\"container\">\r\n                <form onSubmit={this.handleSubmit} className=\"white\">\r\n                    <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"title\">Title</label>\r\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                     <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn blue darken-4 z-depth-0\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return{\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        createProject: (project) => dispatch(createProject(project))\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject);","export const createProject = (project) =>{\r\n    return(dispatch, getState, {getFirebase,getFireStore}) =>{\r\n        //make async call to database\r\n        const firestore = getFirebase().firestore()\r\n        console.log(getState())\r\n        const profile = getState().firebase.profile;\r\n        const authorId = getState().firebase.auth.uid\r\n        firestore.collection('projects').add({\r\n            ...project,\r\n            authorFirstName: profile.firstName,\r\n            authorLastName: profile.lastName,\r\n            authorId: authorId,\r\n            createdAt: new Date()\r\n        }).then(() =>{\r\n            dispatch({type: 'CREATE_PROJECT', project: project})\r\n        }).catch((err) =>{\r\n            dispatch({type: 'CREATE_PROJECT_ERROR', err})\r\n        })\r\n       \r\n    }\r\n};","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Navbar from \"./components/layout/Navbar\";\nimport Dashboard from \"./components/dashboard/Dashboard\";\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignUp';\nimport CreateProject from './components/projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={ProjectDetails} />\n          <Route path=\"/signin\" component={SignIn} />\n          <Route path=\"/signup\" component={SignUp} />\n          <Route path=\"/create\" component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\r\n    authError: null,\r\n    loading: false\r\n}\r\n\r\nconst authReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'LOGIN_ERROR':\r\n            console.log('login error')\r\n            return {\r\n                ...state,\r\n                authError: 'Invalid Credentials',\r\n                loading: false\r\n            }\r\n        case 'SIGNIN_LOADER':\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case 'LOGIN_SUCCESS' :\r\n            console.log('Login successfully')\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_LOADER':\r\n            return{\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case 'SIGNOUT_SUCCESS' :\r\n            console.log('signout success')\r\n            return state\r\n        case 'SIGNUP_SUCCESS' :\r\n            console.log('signup success')\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                authError: null\r\n            }\r\n        case 'SIGNUP_ERROR' :\r\n            console.log('signup error')\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                authError: action.err.message \r\n            }\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n        {id: '1', title: 'help me find peach', content:'blah blah blah'},\r\n        {id: '2', title: 'collect all the stars', content:'blah blah blah'},\r\n        {id: '3', title: 'egg hunt with yoshi', content:'blah blah blah'}\r\n    ]\r\n}\r\n\r\nconst projectReducer = (state = initState, action) =>{\r\n    switch(action.type){\r\n        case 'CREATE_PROJECT' :\r\n        console.log('project created', action.project)\r\n        return state;\r\n        case 'CREATE_PROJECT_ERROR' :\r\n            console.log('error while creating project', action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default projectReducer","import authReducer from './authReducer';\r\nimport projectReducer from './projectReducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore'\r\nimport  {firebaseReducer} from 'react-redux-firebase'\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    project: projectReducer,\r\n    firestore: firestoreReducer,\r\n    firebase: firebaseReducer\r\n})\r\n\r\nexport default rootReducer"," import firebase from 'firebase/app'\r\n import 'firebase/firestore';\r\n import 'firebase/auth'\r\n \r\n\r\n // Your web app's Firebase configuration\r\n var firebaseConfig = {\r\n    apiKey: \"AIzaSyANMrtIM84bFwqZiZeKbpVZxlTbEqjwmZk\",\r\n    authDomain: \"marioplan-cfa91.firebaseapp.com\",\r\n    databaseURL: \"https://marioplan-cfa91.firebaseio.com\",\r\n    projectId: \"marioplan-cfa91\",\r\n    storageBucket: \"marioplan-cfa91.appspot.com\",\r\n    messagingSenderId: \"246341570775\",\r\n    appId: \"1:246341570775:web:de5863037a74be38a36092\",\r\n    measurementId: \"G-DFDD1PJ1LZ\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore();\r\n\r\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider, useSelector } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport {createFirestoreInstance, getFirestore, reduxFirestore } from 'redux-firestore';\nimport {ReactReduxFirebaseProvider, getFirebase, isLoaded} from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\n\nconst rrfConfig = { \n  userProfile: 'users',\n  useFirestoreForProfile: true\n } // react-redux-firebase config\n\nconst store = createStore(\n  rootReducer,\n  compose(\n   applyMiddleware(thunk.withExtraArgument({getFirestore, getFirebase})),\n   reduxFirestore(firebase,fbConfig),\n  )\n);\n\nconst rrfProps = {\n     firebase: fbConfig,\n     config: rrfConfig,\n     dispatch: store.dispatch,\n     createFirestoreInstance // <- needed if using firestore\n }\n\n function AuthIsLoaded({ children }) {\n  const auth = useSelector(state => state.firebase.auth)\n  if (!isLoaded(auth)) return <div className=\"container center\"><p>Loading...</p></div>;\n  return children\n}\n\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </AuthIsLoaded>\n  </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}